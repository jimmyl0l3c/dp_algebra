# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "conftest.py",
    "tests",
    "migrations",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.8
target-version = "py311"

[lint]
# Rules list: https://docs.astral.sh/ruff/rules/
select = [
    "E1", "E4", "E5", "E7", "E9", "W", "F",  # pycodestyle and pyflakes
    "I", "TID252", "TID253", # Import-related checks (isort, flake8-tidy-imports)
    "ARG",  # flake8-unused-arguments
    "ISC",  # flake8-implicit-str-concat
    "COM818", "COM819",  # flake8-commas
    "Q",  # flake8-quotes (enforce consistent quotes)
    "C4",  # flake8-comprehensions
    "N8", "UP",  # pep8-naming and pyupgrade
    "RET",  # flake8-return (missing/unnecessary return statements, unnecessary branch after return, etc.)
    "SIM101", "SIM102", "SIM103", "SIM108", "SIM109", "SIM11", "SIM2", "SIM3", "SIM4", "SIM9",  # flake8-simplify
    "ANN0", "ANN201", "ANN205", "ANN206",  # flake8-annotations (forcing type hints)
    "TCH",  # flake8-type-checking (move type checking imports to type-checking block, reduces overhead at runtime)
    "B",  # flake8-bugbear (likely bugs and design problems)
    "FA",  # flake8-future-annotations (missing future annotations)
    "LOG009",  # flake8-logging-format (do not use logging.WARN, use logging.WARNING instead)
    "PIE",  # flake8-pie (misc lints, eg. unnecessry-placeholder, non-unique-enums, etc.)
    "SLF",  # flake8-slf (private-member access)
    "SLOT", "INP",  # flake8-slot, flake8-no-pep-420
    "PTH",  # flake8-use-pathlib
    "FIX", # flake8-fixme (alternatively use flake8-todos to force the TODO tag to contain a reference to jira ticket)
    "DJ01",  # flake8-django, optionally "DJ008" (requires all models to have __str__ defined)
    "T20"  # Bans print statements, comment it if needed
]
ignore = [
    "ARG002"  # Ignore unused arguments of class methods (might be overridden in subclasses)
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
